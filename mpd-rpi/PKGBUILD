# Maintainer: robot <cultofrobots [at] protonmail [dot] com>
# Website: https://github.com/CultofRobots/
# Based on official arch linux mpd PKGBUILD made by the following people:
# Maintainer: David Runge <dvzrv@archlinux.org>
# Contributor: Gaetan Bisson <bisson@archlinux.org>
# Contributor: Angel Velasquez <angvp@archlinux.org>
# Contributor: Andrea Scarpino <andrea@archlinux.org>
# Contributor: Damir Perisa <damir.perisa@bluewin.ch>
# Contributor: Ben <ben@benmazer.net>

pkgname=mpd-rpi
_pkgname=mpd
pkgver=0.22
pkgrel=1
pkgdesc="Flexible, powerful, server-side application for playing music, optimized for RaspPi."
url="http://www.musicpd.org/"
license=('GPL2')
arch=('armv7h' 'aarch64')
depends=('expat' 'gcc-libs' 'glibc' 'lame' 'libgcrypt' 'libmad' 'libshout'
         'libsoxr' 'opus' 'sqlite' 'wavpack' 'yajl' 'zlib')
makedepends=('alsa-lib' 'audiofile' 'avahi' 'boost' 'curl' 'dbus' 'faad2'
             'ffmpeg' 'flac' 'icu' 'libid3tag' 'libmpdclient' 'libogg' 'libupnp'
             'liburing' 'libvorbis' 'meson' 'python-sphinx' 'systemd-libs')
provides=("mpd=$pkgver")
conflicts=('mpd')
replaces=('mpd')
backup=("etc/${_pkgname}.conf")
source=("https://www.musicpd.org/download/${_pkgname}/${pkgver}/${_pkgname}-${pkgver}.tar.xz"{,.sig}
        "${_pkgname}.conf"
        "${_pkgname}.sysusers"
        "${_pkgname}.tmpfiles")
sha512sums=('2a6671dc2392dbac65d8339b8cfe86626fc46727bedab80266b24c6d63b0a26a832fc233576866ab5115627efdaa61bbe6876f4d33cb48c21e16fb5b74d3cfe4'
            'SKIP'
            'e1f2cede2aae5500bc473c8a95df28134015fa99b6af781bfe2b5ef57f4624fd4e2e4477d690a6147becab9079934cfe42f1603daa69930a0d9e97393f6f167b'
            '6e467481406279767b709ec6d5c06dbd825c0de09045c52ffa2d21d0604dcfe19b7a92bf42bed25163d66a3a0d1dbde6185a648b433eaf5eac56be90491e2e18'
            'db473db27cd68994c3ee26e78e0fb34d13126301d8861563dcc12a22d62ecb14c4ffb1e0798c6aaccdff34e73bae3fbeeff7b42606c901a2d35e278865cdf35d')
b2sums=('8b95c2a4927e139d2f44d45101e0903ce7b8f0caf7d7d83d978d4aa782369270096c03db398fe13138621d7142c87a15131e20f57fecbc760c2fbaf5cbdcd52b'
        'SKIP'
        '77102efd67d46f6887057aee0fd3b19582b08219be7b0aa8db47f0094e1f062fbd8eb98c9f4c9ea35be7823653c54280bc5f62e62a4eb62321e9c12507acaeaf'
        '4ab6e415284c77802a39d0913d701fe55e56f3c22b19557661fbef77e456b5e1d151da4202695282b956602e716a7afdb994aa2fc17368b9a0d0d051d47a3afb'
        'd7b587c25dd5830c27af475a8fdd8102139d7c8fdd6f04fe23b36be030e4411582e289f575c299255ff8183096f7d47247327276f9a24641cbd032d9675b837a')
validpgpkeys=('0392335A78083894A4301C43236E8A58C6DB4512') # Max Kellermann <max@blarg.de>

prepare() {
  cd "${_pkgname}-${pkgver}"
  sed -e '/\[Service\]/a User=mpd' \
      -i "systemd/system/mpd.service.in"
}

build() {
  cd "${_pkgname}-${pkgver}"
  # NOTE: sndio conflicts with alsa
  # NOTE: nfs supports only NFS version 3.
  # NOTE: vorbisenc enabled until opus displays streams tags properly in icecast
  meson --prefix /usr \
        --libexecdir lib \
        --sbindir bin \
        --buildtype plain \
        --auto-features enabled \
        --wrap-mode nodownload \
        -D b_lto=true \
        -D b_pie=true \
        -D documentation=enabled \
        -D adplug=disabled \
        -D sndio=disabled \
        -D shine=disabled \
        -D tremor=disabled \
        -D chromaprint=disabled \
        -D ipv6=disabled \
        -D webdav=disabled \
        -D cdio_paranoia=disabled \
        -D mms=disabled \
        -D nfs=disabled \
        -D smbclient=disabled \
        -D qobuz=disabled \
        -D tidal=disabled \
        -D bzip2=disabled \
        -D iso9660=disabled \
        -D zzip=disabled \
        -D fluidsynth=disabled \
        -D gme=disabled \
        -D mikmod=disabled \
        -D modplug=disabled \
        -D mpcdec=disabled \
        -D mpg123=disabled \
        -D sidplay=disabled \
        -D sndfile=disabled \
        -D wildmidi=disabled \
        -D twolame=disabled \
        -D libsamplerate=disabled \
        -D ao=disabled \
        -D jack=disabled \
        -D openal=disabled \
        -D oss=disabled \
        -D pulse=disabled \
        -D recorder=false \
       build
  ninja -C build
}

check() {
  cd "${_pkgname}-${pkgver}"
  ninja -C build test
}

package() {
  depends+=('libFLAC.so' 'libasound.so' 'libaudiofile.so' 'libavahi-client.so'
            'libavahi-common.so' 'libavcodec.so' 'libavformat.so' 'libavutil.so'
            'libcurl.so' 'libdbus-1.so' 'libfaad.so' 'libicui18n.so' 'libicuuc.so'
            'libid3tag.so' 'libmpdclient.so' 'libogg.so' 'libsystemd.so' 'libupnp.so'
            'liburing.so' 'libvorbis.so' 'libvorbisenc.so')
  cd "${_pkgname}-${pkgver}"
  DESTDIR="${pkgdir}" ninja -C build install
  install -vDm 644 "doc/${_pkgname}conf.example" \
    -t "${pkgdir}/usr/share/doc/${_pkgname}/"
  install -vDm 644 "../${_pkgname}.conf" -t "${pkgdir}/etc/"
  install -vDm 644 "../${_pkgname}.sysusers" "${pkgdir}/usr/lib/sysusers.d/${_pkgname}.conf"
  install -vDm 644 "../${_pkgname}.tmpfiles" "${pkgdir}/usr/lib/tmpfiles.d/${_pkgname}.conf"
}
